@using wppCms.Areas.Usr.Models
@model UsrHomeDetailsViewModel

@{
    ViewData["ChannelId"] = Model.Channel.Channel.Id;
    ViewData["FontAwsome"] = Model.FontAwsomeUrl;
    ViewData["Culture"] = Model.Culture;

    ViewData["Title"] = "Channel - " + Model.Channel.Channel.Title;
    Layout = "~/Areas/Usr/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="row">
        <div class="col-md-5">

            <h1>@Model.Channel.Channel.Title</h1>
            <p>
                @Model.Channel.Channel.Description
            </p>
            <div class="d-flex py-1">
                <div class="me-1">
                    @if (Model.Channel.Channel.IsPublic)
                    {
                        <a class="btn btn-secondary" href="/@Model.Culture/c/@Model.Channel.Channel.PermaName" target="_blank">
                            <i class="fa-solid fa-desktop fa-fw"></i>
                        </a>
                    }
                    else
                    {
                        <span class="btn btn-secondary">
                            <i class="fa-solid fa-display-slash fa-fw"></i>
                        </span>
                    }
                </div>
                <div class="x-1">
                    <a class="btn btn-secondary" href="/@Model.Culture/ads/organization/@Model.Channel.Channel.Id" target="_blank">
                        <i class="fa-solid fa-rectangle-ad fa-fw"></i>
                    </a>
                </div>
            </div>
          
            <!-- Edit and Delete Buttons for the Channel -->
            <div class="d-flex justify-content-end">
                <div class="mx-1">
                    <a href="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/edit" class="btn btn-primary">
                        <i class="fa-solid fa-pen-to-square fa-fw"></i>
                    </a>
                </div>
                <div class="mx-1">
                    <form action="/@Model.Culture/usr/channel/delete/@Model.Channel.Channel.Id" method="post"
                          onsubmit="return confirm('Warning: Deleting this channel will make it inaccessible to all members, including yourself. Articles belonging to this channel will also no longer be accessible. Additionally, this channel will no longer be available through the API. Are you sure you want to proceed?');">
                        <button type="submit" class="btn btn-danger">
                            <i class="fa-solid fa-trash fa-fw"></i>
                        </button>
                    </form>
                </div>
            </div>

            <hr />

            <h2 class="font-lg">Authors</h2>

            @if (Model.Channel.Authors != null)
            {
                if (Model.Channel.Authors.Any())
                {
                    <div class="row">
                        @foreach (var author in Model.Channel.Authors)
                        {
                            <div class="col-4">
                                <div class="d-flex">
                                    <img src="@author.ProfileImageUrl"
                                         class="rounded-circle me-2"
                                         style="width: 50px; height: 50px; object-fit: cover;"
                                         alt="@author.Title" />
                                    <div>
                                        @author.Title
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>No authors found.</p>
                }
            }
            else
            {
                <p>No authors found.</p>
            }

            <hr />
            <h2>Members</h2>

            <div class="row">
                @foreach (var member in Model.Channel.Members)
                {
                    <div class="col-4 m-1">
                        <div class="card">
                            <img src="@member.User.IconImage" class="card-img-top" />
                            <div class="card-body">
                                <h4 class="font-lg">@member.User.NickName</h4>
                                <p>
                                    @member.User.Email
                                </p>
                                <div class="d-flex d-flex flex-wrap">
                                    @if (member.Membership.IsOwner)
                                    {
                                        <div class="px-1">
                                            <span class="badge bg-secondary">Owner</span>
                                        </div>

                                    }
                                    @if (member.Membership.IsReviewer)
                                    {
                                        <div class="px-1">
                                            <span class="badge bg-secondary">Reviewer</span>
                                        </div>
                                    }
                                    @if (member.Membership.IsEditor)
                                    {
                                        <div class="px-1">
                                            <span class="badge bg-secondary">Editor</span>
                                        </div>
                                    }

                                </div>
                                <hr />
                                @if (member.Membership.IsRejected)
                                {
                                    <div class="px-1">
                                        <div class="badge bg-danger">Rejected</div>
                                    </div>
                                }

                                @if (member.Membership.IsAccepted)
                                {
                                    <div class="px-1">
                                        <div class="badge bg-success">Accepted</div>
                                    </div>
                                }

                                @if (member.Membership.IsArchived)
                                {
                                    <div class="px-1">
                                        <div class="badge bg-secondary">Archived</div>
                                    </div>
                                }

                                @if (!member.Membership.IsReviewer && !member.Membership.IsAccepted && !member.Membership.IsArchived)
                                {
                                    <div class="px-1">
                                        <div class="badge bg-secondary">Waiting</div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-7">
            <!-- List of Articles in this Channel -->
            <div class="d-flex justify-content-between align-items-start pt-4">

                <div class="d-flex">
                    <!-- Search Bar -->
                    <form id="searchForm" class="d-flex me-3">
                        <div class="input-group">
                            <input type="text" id="searchKeyword" class="form-control" placeholder="Search articles..." />
                            <button type="button" id="searchButton" class="btn btn-secondary">
                                <i class="fa-solid fa-magnifying-glass fa-fw"></i>
                            </button>
                        </div>
                    </form>

                    <!-- Sort Dropdown -->
                    <div class="me-3">
                        <select id="sortSelector" class="form-select">
                            <option value="">Sort by</option>
                            <option value="title_asc">Title (A-Z)</option>
                            <option value="title_desc">Title (Z-A)</option>
                            <option value="publishdate_asc">Publish Date (Oldest First)</option>
                            <option value="publishdate_desc">Publish Date (Newest First)</option>
                        </select>
                    </div>

                    <!-- Button to Create New Article -->
                    <a href="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/article/create" class="btn btn-primary">
                        <i class="fa-solid fa-plus fa-fw"></i>
                    </a>
                </div>
            </div>

            <div id="articles"></div>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const $articlesContainer = $("#articles");
            const $searchKeyword = $("#searchKeyword");
            const $searchButton = $("#searchButton");
            const $sortSelector = $("#sortSelector");

            // Function to load articles with optional search and sort
            function loadArticles(keyword = "", sort = "") {
                // Show a loading message
                $articlesContainer.html("<p>Loading articles...</p>");

                // Prepare the URL with query parameters
                const url = `/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/_articles?keyword=${encodeURIComponent(keyword)}&sort=${encodeURIComponent(sort)}`;

                // Load the articles dynamically
                $articlesContainer.load(url, function (response, status, xhr) {
                    if (status === "error") {
                        $articlesContainer.html(`<p class="text-danger">Failed to load articles: ${xhr.statusText}</p>`);
                    }
                });
            }

            // Initial load without filters
            loadArticles();

            // Handle search button click
            $searchButton.on("click", function () {
                const keyword = $searchKeyword.val().trim();
                const sort = $sortSelector.val(); // Get the selected sort value
                loadArticles(keyword, sort);
            });

            // Handle sort change
            $sortSelector.on("change", function () {
                const sort = $(this).val();
                const keyword = $searchKeyword.val().trim(); // Get the current search keyword
                loadArticles(keyword, sort);
            });

            // Optional: Handle Enter key in the search input
            $searchKeyword.on("keypress", function (e) {
                if (e.which === 13) {
                    e.preventDefault(); // Prevent form submission
                    const keyword = $searchKeyword.val().trim();
                    const sort = $sortSelector.val(); // Get the selected sort value
                    loadArticles(keyword, sort);
                }
            });
        });
    </script>
}

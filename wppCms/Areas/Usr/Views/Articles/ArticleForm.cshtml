@using wppCms.Areas.Usr.Models
@model UsrArticlesCreateEditViewModel

@{
    ViewData["Title"] = "ArticleForm";
    ViewData["ChannelId"] = Model.Channel.Channel.Id;
    ViewData["FontAwsome"] = Model.FontAwsomeUrl;
    ViewData["Culture"] = Model.Culture;
    Layout = "~/Areas/Usr/Views/Shared/_Layout.cshtml";
}

<style>
    .image-wrapper {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .img-thumbnail {
        max-width: 150px;
        height: auto;
        margin-right: 10px;
    }

    .url-container {
        display: flex;
        align-items: center;
    }

        .url-container a {
            text-decoration: none;
            color: #007bff;
            word-break: break-all;
        }

        .url-container button {
            margin-left: 10px;
        }
</style>
<div class="container">
    <h2>@(Model.IsEditMode ? "Edit Article" : "Create New Article")</h2>

    <form action="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/article/save" method="post">
        @Html.AntiForgeryToken()

        <!-- Validation summary for non-field-specific errors -->
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <strong>Please correct the following errors:</strong>
                <ul>
                    @foreach (var entry in ViewData.ModelState)
                    {
                        foreach (var error in entry.Value.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
            </div>
        }

        <!-- Hidden Fields -->
        <input type="hidden" name="RowKey" value="@(Model.IsEditMode ? Model.RowKey : Guid.NewGuid().ToString())" />
        <input type="hidden" name="IsEditMode" value="@(Model.IsEditMode ? "true" : "false")" />
        <input type="hidden" name="channelId" value="@Model.Channel.Channel.Id" />

        <div class="row">
            <!-- Left Section -->
            <div class="col-md-8 my-2">
                <!-- Folders -->
                <div class="mb-3">
                    <label for="Folders" class="form-label">Path</label>
                    <input type="text" id="Folders" name="Folders" class="form-control" value="@Model.Folders" />
                    <div class="text-danger">@ViewData.ModelState["Folders"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <!-- Title -->
                <div class="mb-3">
                    <label for="Title" class="form-label">Title</label>
                    <input type="text" id="Title" name="Title" class="form-control" value="@Model.Title" />
                    <div class="text-danger">@ViewData.ModelState["Title"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <!-- Text Editor Section -->
                <div class="mb-3">

                    <textarea id="myEditor" name="Text" rows="10" class="form-control">@Model.Text</textarea>
                </div>
               

                <!-- Description -->
                <div class="mb-3">
                    <label for="Description" class="form-label">Description</label>
                    <textarea id="Description" name="Description" class="form-control" rows="3">@Model.Description</textarea>
                    <div class="text-danger">@ViewData.ModelState["Description"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <!-- MainImageUrl -->
                <div class="mb-3">
                    <label for="MainImageUrl" class="form-label">Main Image URL</label>
                    <input type="text" id="MainImageUrl" name="MainImageUrl" class="form-control" value="@Model.MainImageUrl" />
                    <div class="text-danger">@ViewData.ModelState["MainImageUrl"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>
            </div>

            <!-- Right Section -->
            <div class="col-md-4 my-2">
                <!-- PermaName -->
                <div class="mb-3">
                    <label for="PermaName" class="form-label">PermaName</label>
                    <input type="text" id="PermaName" name="PermaName" class="form-control" value="@Model.PermaName" />
                    <div class="text-danger">@ViewData.ModelState["PermaName"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <hr />
                <!-- Is Article Checkbox -->
                <div class="mb-3 form-check">
                    <input type="checkbox" id="IsArticle" name="IsArticle" class="form-check-input" @(Model.IsArticle ? "checked" : "") />
                    <label for="IsArticle" class="form-check-label">Is Article</label>
                </div>

                <!-- Date Fields -->
                <div id="dateSection" style="display: none;">
                    <div class="mb-3">
                        <label for="PublishSince" class="form-label">Publish Since</label>
                        <input type="datetime-local" id="PublishSince" name="PublishSince" class="form-control" value="@Model.PublishSince" />
                        <div class="text-danger">@ViewData.ModelState["PublishSince"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                    </div>
                    <div class="mb-3">
                        <label for="PublishUntil" class="form-label">Publish Until</label>
                        <input type="datetime-local" id="PublishUntil" name="PublishUntil" class="form-control" value="@Model.PublishUntil" />
                        <div class="text-danger">@ViewData.ModelState["PublishUntil"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                    </div>
                </div>

                <hr />
                <!-- Show Author Checkbox -->
                <div class="mb-3 form-check">
                    <input type="checkbox" id="ShowAuthor" name="ShowAuthor" value="true" class="form-check-input" @(Model.ShowAuthor ? "checked" : "") />
                    <label for="ShowAuthor" class="form-check-label">Show Author</label>
                </div>

                <!-- Author Selection -->
                <div id="authorSection" class="mb-3" style="display: @(Model.ShowAuthor ? "block" : "none")">
               
                    <select id="AuthorId" name="AuthorId" class="form-select">
                        <option value="" disabled selected>Select an author</option>
                        @foreach (var author in Model.Authors)
                        {
                            <option value="@author.RowKey"
                            @(author.RowKey == Model.AuthorId ? "selected" : "")>
                                @author.Title
                            </option>
                        }
                    </select>
                    <div class="text-danger">@ViewData.ModelState["AuthorId"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <hr />

                <!-- Tags -->
                <div class="mb-3">
                    <label for="Tags" class="form-label">Tags</label>
                    <input type="text" id="Tags" name="Tags" class="form-control" value="@Model.Tags" />
                    <div class="text-danger">@ViewData.ModelState["Tags"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <hr />

                <!-- Article Culture -->
                <div class="mb-3">
                    <label for="ArticleCulture" class="form-label">Culture</label>
                    <input type="text" id="ArticleCulture" name="ArticleCulture" class="form-control" value="@Model.ArticleCulture" />
                    <div class="text-danger">@ViewData.ModelState["ArticleCulture"]?.Errors.FirstOrDefault()?.ErrorMessage</div>
                </div>

                <hr />

                <!-- Is Archived Checkbox -->
                <div class="mb-3 form-check">
                    <input type="checkbox" id="IsArchived" name="IsArchived" value="true" class="form-check-input" @(Model.IsArchived ? "checked" : "") />
                    <label for="IsArchived" class="form-check-label">Archive Article</label>
                </div>

                <!-- Is Searchable Checkbox -->
                <div class="mb-3 form-check">
                    <input type="checkbox" id="IsSearchable" name="IsSearchable" value="true" class="form-check-input" @(Model.IsSearchable ? "checked" : "") />
                    <label for="IsSearchable" class="form-check-label">Searchable Article</label>
                </div>

                <hr />

                <!-- Submit Button -->
                <div class="my-3 text-end">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa-solid fa-cloud-arrow-up fa-fw"></i>
                    </button>
                </div>

            </div>
        </div>
    </form>
</div>

@section Scripts {

    <script src="~/js/tinymce/tinymce.min.js"></script>
    <script src="~/js/tinymcehandler.js"></script>
    <script>
        $(document).ready(function () {

            initializeTinyMce('/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/article/upload-image');

            const $isArticleCheckbox = $('#IsArticle');
            const $dateSection = $('#dateSection');
            const $showAuthorCheckbox = $('#ShowAuthor');
            const $authorSection = $('#authorSection');
           
            // Initial visibility on page load
            $dateSection.toggle($isArticleCheckbox.is(':checked'));
            $isArticleCheckbox.on('change', function () {

                $dateSection.toggle($(this).is(':checked'));
            });

            // Toggle author section visibility
            $authorSection.toggle($showAuthorCheckbox.is(':checked'));
            $showAuthorCheckbox.on('change', function () {
                $authorSection.toggle($(this).is(':checked'));
            });

        });
    </script>
}



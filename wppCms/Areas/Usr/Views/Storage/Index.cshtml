@using wppCms.Areas.Usr.Models
@model UsrStorageIndexViewModel

@{
    ViewData["ChannelId"] = Model.Channel.Channel.Id;
    ViewData["FontAwsome"] = Model.FontAwsomeUrl;
    ViewData["Culture"] = Model.Culture;

    ViewData["Title"] = "Files";
    Layout = "~/Areas/Usr/Views/Shared/_Layout.cshtml";
}
@functions {
    public string GetFileIconClass(string contentType)
    {
        var fileType = contentType.Split('/')[0].ToLowerInvariant();

        return fileType switch
        {
            "application" => "fa-file-alt",
            "text" => "fa-file-alt",
            "audio" => "fa-file-audio",
            "video" => "fa-file-video",
            "image" => "fa-file-image",
            "pdf" => "fa-file-pdf",
            "zip" => "fa-file-archive",
            "word" => "fa-file-word",
            "excel" => "fa-file-excel",
            "powerpoint" => "fa-file-powerpoint",
            _ => "fa-file" // Default icon
        };
    }
}
<div class="container my-5">
    <h1 class="mb-4">Files in @Model.Channel.Channel.Title</h1>

    <div class="row">
        <!-- Search Filters -->
        <div class="col-md-6 my-2">
            <form method="get" class="mb-4">
                <input type="hidden" name="culture" value="@Model.Culture" />
                <input type="hidden" name="channelId" value="@Model.Channel.Channel.Id" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <label for="nameFilter" class="form-label">File Name</label>
                        <input type="text" class="form-control" id="nameFilter" name="nameFilter" value="@Model.NameFilter" placeholder="Search by name">
                    </div>
                    <div class="col-md-6">
                        <label for="typeFilter" class="form-label">Content Type</label>
                        <input type="text" class="form-control" id="typeFilter" name="typeFilter" value="@Model.TypeFilter" placeholder="e.g., text/plain">
                    </div>
                </div>

                <div class="row g-3 mt-3">
                    <div class="col-md-6">
                        <label for="minSize" class="form-label">Min Size (KB)</label>
                        <input type="number" class="form-control" id="minSize" name="minSize" value="@Model.MinSize" min="0">
                    </div>
                    <div class="col-md-6">
                        <label for="maxSize" class="form-label">Max Size (KB)</label>
                        <input type="number" class="form-control" id="maxSize" name="maxSize" value="@Model.MaxSize" min="0">
                    </div>
                </div>

                <div class="row g-3 mt-3">
                    <div class="col-md-6">
                        <label for="pageSize" class="form-label">Page Size</label>
                        <input type="number" class="form-control" id="pageSize" name="pageSize" value="@Model.PageSzie" min="1">
                    </div>
                    <div class="col-md-6 mt-4">
                        <button type="submit" class="btn btn-primary w-100">Search</button>
                    </div>
                </div>
            </form>
        </div>

        <!-- File Upload -->
        <div class="col-md-6 my-2">
            <h3>Upload Files</h3>
            <form id="uploadForm" method="post" enctype="multipart/form-data" action="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/storage/upload">
                <div class="mb-3">
                    <label for="folderName" class="form-label">Folder Name</label>
                    <input type="text" class="form-control" id="folderName" name="folderName" placeholder="Specify folder name">
                </div>

                <div class="upload-area border border-primary rounded p-4 text-center" style="cursor: pointer;" id="uploadArea">
                    <p class="text-muted">Drag and drop files here or click to select files</p>
                    <input type="file" id="fileInput" name="file" class="d-none" required>
                </div>

                <div class="preview-area mt-3"></div>

                <div class="mt-3">
                    <button type="submit" class="btn btn-success w-100">Upload</button>
                </div>
            </form>
        </div>
    </div>

    <!-- File List -->
    <div class="mt-4">
        <div class="row">
            @if (Model.Files.Any())
            {
                @foreach (var file in Model.Files)
                {
                    <div class="col-6 col-md-4 col-lg-2 my-2 text-center">
                        @if (file.ContentType.StartsWith("image/", StringComparison.OrdinalIgnoreCase))
                        {
                            <!-- Display image -->
                            <a href="@file.Url" target="_blank">
                                <img src="@file.Url" alt="@file.Name" class="img-thumbnail mb-2" style="max-height: 150px; object-fit: cover;">
                            </a>
                        }
                        else
                        {
                            <!-- Display file icon -->
                            <a href="@file.Url" target="_blank">
                                <i class="fas @GetFileIconClass(file.ContentType) fa-5x text-muted mb-2"></i>
                            </a>
                        }

                        <!-- File Info -->
                        <a href="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/storage/details/@file.Name" class="d-block text-truncate" title="@file.Name">
                            @file.Name
                        </a>
                        <p class="small text-muted">@file.ContentType</p>
                        <p class="small text-muted">@((file.Size / 1024).ToString("N0")) KB</p>
                        <p class="small text-muted">@file.LastModified?.ToString("g")</p>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No files found.</p>
            }

        </div>
    </div>
</div>

@section Scripts {
    <script>
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const previewArea = document.querySelector('.preview-area');
        const uploadForm = document.getElementById('uploadForm');

        uploadArea.addEventListener('click', () => {
            fileInput.click();
        });

        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('bg-light');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('bg-light');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('bg-light');
            const files = e.dataTransfer.files;
            fileInput.files = files;
            showPreview(files);
        });

        fileInput.addEventListener('change', (e) => {
            const files = e.target.files;
            showPreview(files);
        });

        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(uploadForm);

            const response = await fetch(uploadForm.action, {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                alert('File uploaded successfully!');
                location.reload();
            } else {
                alert('Error uploading file.');
            }
        });

        function showPreview(files) {
            previewArea.innerHTML = '';
            Array.from(files).forEach(file => {
                const fileType = file.type.split('/')[0];
                const preview = document.createElement('div');
                preview.classList.add('border', 'rounded', 'p-2', 'mb-2');

                if (fileType === 'image') {
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(file);
                    img.alt = file.name;
                    img.style.maxWidth = '100%';
                    img.style.height = 'auto';
                    preview.appendChild(img);
                } else {
                    preview.textContent = `File: ${file.name}`;
                }

                previewArea.appendChild(preview);
            });
        }
    </script>
}

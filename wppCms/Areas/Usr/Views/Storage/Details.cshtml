@using wppCms.Areas.Usr.Models
@model UsrStorageDetailsViewModel

@{
    ViewData["ChannelId"] = Model.Channel.Channel.Id;
    ViewData["FontAwsome"] = Model.FontAwsomeUrl;
    ViewData["Culture"] = Model.Culture;

    ViewData["Title"] = "File Details";
    Layout = "~/Areas/Usr/Views/Shared/_Layout.cshtml";
}
@functions {
    public string GetFileIconClass(string contentType)
    {
        var fileType = contentType.Split('/')[0].ToLowerInvariant();

        return fileType switch
        {
            "application" => "fa-file-alt",
            "text" => "fa-file-alt",
            "audio" => "fa-file-audio",
            "video" => "fa-file-video",
            "image" => "fa-file-image",
            "pdf" => "fa-file-pdf",
            "zip" => "fa-file-archive",
            "word" => "fa-file-word",
            "excel" => "fa-file-excel",
            "powerpoint" => "fa-file-powerpoint",
            _ => "fa-file" // Default icon
        };
    }
}
<div class="container my-5">
    <h1 class="mb-4">File Details</h1>

    <div class="row">
        <!-- File Preview Section -->
        <div class="col-md-6">
            <h4>Preview</h4>
            @if (Model.File.ContentType.StartsWith("image/", StringComparison.OrdinalIgnoreCase))
            {
                <img src="@Model.File.Url" alt="@Model.File.Name" class="img-thumbnail" style="max-width: 100%; height: auto;">
                @if (!string.IsNullOrEmpty(Model.ThumbnailUrl))
                {
                    <p class="mt-3">Thumbnail:</p>
                    <img src="@Model.ThumbnailUrl" alt="Thumbnail for @Model.File.Name" class="img-thumbnail" style="max-width: 100%; height: auto;">
                }
            }
            else
            {
                <i class="fas @GetFileIconClass(Model.File.ContentType) fa-5x text-muted"></i>
                <p class="mt-3">@Model.File.Name</p>
            }
        </div>

        <!-- File Metadata Section -->
        <div class="col-md-6">
            <h4>File Information</h4>
            <table class="table table-bordered">
                <tr>
                    <th>Name</th>
                    <td>@Model.File.Name</td>
                </tr>
                <tr>
                    <th>Content Type</th>
                    <td>@Model.File.ContentType</td>
                </tr>
                <tr>
                    <th>Size</th>
                    <td>@((Model.File.Size / 1024).ToString("N0")) KB</td>
                </tr>
                <tr>
                    <th>Last Modified</th>
                    <td>@Model.File.LastModified?.ToString("g")</td>
                </tr>
                <tr>
                    <th>URL</th>
                    <td><a href="@Model.File.Url" target="_blank">@Model.File.Url</a></td>
                </tr>
            </table>
        </div>
    </div>

    <hr class="my-4" />

    <!-- Actions Section -->
    <div class="row">
        <!-- Edit File -->
        <div class="col-md-6">
            <h4>Edit File</h4>
            <form id="editFileForm" method="post" enctype="multipart/form-data" action="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/storage/edit/@Model.File.Name">
                <div class="mb-3">
                    <label for="newFileName" class="form-label">Rename File</label>
                    <input type="text" class="form-control" id="newFileName" name="newFileName" value="@Model.File.Name" required>
                </div>

                @if (Model.File.ContentType.StartsWith("image/", StringComparison.OrdinalIgnoreCase))
                {
                    <div class="mb-3">
                        <label for="newFile" class="form-label">Replace Image</label>
                        <input type="file" class="form-control" id="newFile" name="newFile" accept="image/*">
                    </div>
                }

                <button type="submit" class="btn btn-primary">Save Changes</button>
            </form>
        </div>

        <!-- Delete File -->
        <div class="col-md-6">
            <h4>Delete File</h4>
            <form id="deleteFileForm" method="post" action="/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/storage/delete/@Model.File.Name">
                <p>Are you sure you want to delete this file?</p>
                <button type="submit" class="btn btn-danger">Delete File</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("editFileForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const formData = new FormData(this);

            const response = await fetch(this.action, {
                method: "POST",
                body: formData,
            });

            if (response.ok) {
                alert("File updated successfully!");
                window.location.reload();
            } else {
                alert("Error updating file.");
            }
        });

        document.getElementById("deleteFileForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            if (confirm("Are you sure you want to delete this file?")) {
                const response = await fetch(this.action, {
                    method: "POST",
                });

                if (response.ok) {
                    alert("File deleted successfully!");
                    window.location.href = "/@Model.Culture/usr/channel/@Model.Channel.Channel.Id/storage";
                } else {
                    alert("Error deleting file.");
                }
            }
        });
    </script>
}